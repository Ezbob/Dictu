/**
 * remove.du
 *
 * Testing the set.remove() method
 *
 * .remove() mutates the set to remove a value
 */

var mySet = set();

mySet.add("dictu");
mySet.add("is");
mySet.add("great!");
mySet.add(true);
mySet.add(false);
mySet.add(10);
mySet.add(10.5);
mySet.add(nil);

assert(mySet.contains("dictu"));
assert(mySet.contains("is"));
assert(mySet.contains("great!"));
assert(mySet.contains(true));
assert(mySet.contains(false));
assert(mySet.contains(10));
assert(mySet.contains(10.5));
assert(mySet.contains(nil));

assert(mySet.len() == 8);

mySet.remove("dictu");

assert(mySet.len() == 7);

assert(not mySet.contains("dictu"));
assert(mySet.contains("is"));
assert(mySet.contains("great!"));


mySet.remove(true);
assert(not mySet.contains(true));

mySet.remove(false);
assert(not mySet.contains(false));

mySet.remove(10);
assert(not mySet.contains(10));

mySet.remove(10.5);
assert(not mySet.contains(10.5));

mySet.remove(nil);
assert(not mySet.contains(nil));

assert(mySet.contains("is"));
assert(mySet.contains("great!"));


var mySet = set("dictu", "is", "great!", true, false, 10, 10.5, nil);

assert(mySet.contains("dictu"));
assert(mySet.contains("is"));
assert(mySet.contains("great!"));
assert(mySet.contains(true));
assert(mySet.contains(false));
assert(mySet.contains(10));
assert(mySet.contains(10.5));
assert(mySet.contains(nil));

assert(mySet.len() == 8);

mySet.remove("dictu");

assert(mySet.len() == 7);

assert(not mySet.contains("dictu"));
assert(mySet.contains("is"));
assert(mySet.contains("great!"));


mySet.remove(true);
assert(not mySet.contains(true));

mySet.remove(false);
assert(not mySet.contains(false));

mySet.remove(10);
assert(not mySet.contains(10));

mySet.remove(10.5);
assert(not mySet.contains(10.5));

mySet.remove(nil);
assert(not mySet.contains(nil));

assert(mySet.contains("is"));
assert(mySet.contains("great!"));