/**
 * remove.du
 *
 * Testing the list.remove() method
 *
 * .remove() will remove a given value from a list
 */
from UnitTest import UnitTest;

class TestListRemove < UnitTest {
    testListRemove() {
        const x = [1, 1, "2", nil, true, false, [1, 2], {"test": 10}];

        // Remove will remove the first element in the list with the given value, not all
        x.remove(1);

        this.assertEquals(x, [1, "2", nil, true, false, [1, 2], {"test": 10}]);
        this.assertEquals(x.len(), 7);

        x.remove(1);

        this.assertEquals(x, ["2", nil, true, false, [1, 2], {"test": 10}]);
        this.assertEquals(x.len(), 6);

        x.remove("2");

        this.assertEquals(x, [nil, true, false, [1, 2], {"test": 10}]);
        this.assertEquals(x.len(), 5);

        x.remove(nil);

        this.assertEquals(x, [true, false, [1, 2], {"test": 10}]);
        this.assertEquals(x.len(), 4);

        x.remove(true);

        this.assertEquals(x, [false, [1, 2], {"test": 10}]);
        this.assertEquals(x.len(), 3);

        x.remove(false);

        this.assertEquals(x, [[1, 2], {"test": 10}]);
        this.assertEquals(x.len(), 2);

        x.remove([1, 2]);

        this.assertEquals(x, [{"test": 10}]);
        this.assertEquals(x.len(), 1);

        x.remove({"test": 10});

        this.assertEquals(x, []);
        this.assertEquals(x.len(), 0);
    }
}

TestListRemove().run();